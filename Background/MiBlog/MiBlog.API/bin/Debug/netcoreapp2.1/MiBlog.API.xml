<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MiBlog.API</name>
    </assembly>
    <members>
        <member name="T:MiBlog.Api.BasicController">
            <summary>
            基础控制器
            </summary>
        </member>
        <member name="M:MiBlog.Api.BasicController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,MiBlog.Abstraction.Interface.Service.IBaseService)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="service"></param>
        </member>
        <member name="M:MiBlog.Api.BasicController.SetService">
            <summary>
            设置服务层属性
            </summary>
        </member>
        <member name="M:MiBlog.Api.BasicController.CheckIsVaild">
            <summary>
            检查传入参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiBlog.Api.BasicController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:MiBlog.Api.BasicController.SetResultWhenSuccess``1(MiBlog.Abstraction.Common.ResponseBase{``0},``0)">
            <summary>
            设置结果对象，当成功
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="result"></param>
            <param name="data"></param>
        </member>
        <member name="M:MiBlog.Api.BasicController.SetResultWhenFail``1(MiBlog.Abstraction.Common.ResponseBase{``0},``0,System.String)">
            <summary>
            设置结果对象，当失败
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="result"></param>
            <param name="data"></param>
        </member>
        <member name="M:MiBlog.Api.BasicController.SetResultWhenError``1(MiBlog.Abstraction.Common.ResponseBase{``0},System.Exception)">
            <summary>
            设置结果对象，当错误
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="result"></param>
            <param name="e"></param>
        </member>
        <member name="T:MiBlog.API.BlogController">
            <summary>
            博客管理
            </summary>
        </member>
        <member name="M:MiBlog.API.BlogController.QueryArticleDetailInfo(System.Guid)">
            <summary>
            查询文章详细信息
            </summary>
            <param name="param">文章id</param>
            <returns></returns>
        </member>
        <member name="M:MiBlog.API.BlogController.QueryArticleCommentDetailInfo(MiBlog.Abstraction.ViewModel.Blog.ReqArticleCommentDetailInfo)">
            <summary>
            查询文章评论信息
            </summary>
            <param name="param">文章id</param>
            <returns></returns>
        </member>
        <member name="M:MiBlog.API.BlogController.QueryUserArticleRank(System.Guid)">
            <summary>
            查询用户的文章榜单 推荐/阅读/热评
            </summary>
            <param name="param">文章id</param>
            <returns></returns>
        </member>
        <member name="M:MiBlog.API.BlogController.QueryUserArticleStatistic(System.Guid)">
            <summary>
            查询用户的文章统计
            1.榜单
            2.用户文章 分类统计
            3.用户文章 标签统计
            4.用户文章 时间统计
            </summary>
            <param name="param">文章id</param>
            <returns></returns>
        </member>
        <member name="T:MiBlog.API.Controller.UserController">
            <summary>
            博客管理
            </summary>
        </member>
        <member name="M:MiBlog.API.Controller.UserController.#ctor(MiBlog.Abstraction.Interface.Service.IUsreInfoService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="config"></param>
        </member>
        <member name="M:MiBlog.API.Controller.UserController.QueryUserInfo(MiBlog.Abstraction.ViewModel.ReqQueryUserInfo)">
            <summary>
            查询用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiBlog.API.Controller.UserController.RegistUser(MiBlog.Abstraction.ViewModel.User.ReqAddLoginInfo)">
            <summary>
            注册用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiBlog.API.Controller.UserController.UpdateUserInfo(MiBlog.Abstraction.ViewModel.User.ReqUpdateUserInfo)">
            <summary>
            更新用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MiBlog.API.Controller.UserController.UploadProfilePicture(System.Guid,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传头像
            </summary>
            <param name="userId"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
    </members>
</doc>
